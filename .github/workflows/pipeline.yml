name: pipeline
on: 
  push:
    branches: [ ... ]
  pull_request:
    branches: [ ... ]   

jobs:

  unit-test:
    runs-on: ubuntu-latest
    steps:
    -  uses: actions/checkout@v3
       with:
         fetch-depth: 0
    - run: mvn test
    - name: Generate JaCoCo Badge
      id: jacoco
      uses: cicirello/jacoco-badge-generator@v2.0.1
    - name: Log coverage percentage
      run: |
        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
        echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"
    - name: Upload JaCoCo coverage report
      uses: actions/upload-artifact@v4
      with:
        name: jacoco-report
        path: target/site/jacoco/

  code-analisys:
    needs: unit-test
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'
          package: '*jar' # Alternative distribution options are available.
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=samuelrosacv_Devops-Fiap
  
  build:
    runs-on: ubuntu-latest
    needs: code-analisys
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Package
      run: mvn package
      
  publish:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          package: '*jar'
      - name: Publish package
        #run: mvn --batch-mode deploy
        run: 
          echo "Run publish fake"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-DEV:
    needs: publish
    runs-on: ubuntu-latest
    environment:
      name: DEV
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Deploy
        shell: bash
        run:
          echo "Deploy DEV"

  Smoketest-DEV:
    needs: deploy-DEV
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v3
      - name: Deploy
        shell: bash
        run:
          sh 'src/main/scripts/smoketest.sh'
          
  TestesFuncionais:
    needs: Smoketest-DEV
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v3
      - name: Deploy
        shell: bash
        run:
          sh 'src/main/scripts/testesFuncionais.sh'
    
  deploy-PRE:
    needs: publish
    runs-on: ubuntu-latest
    environment:
      name: PRE
    if: github.ref == 'refs/heads/release'
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
#          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: 123 #${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
          
  Smoketest-PRE:
    needs: deploy-PRE
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/release'
    steps:
      - uses: actions/checkout@v3
      - name: Deploy
        shell: bash
        run:
          sh 'src/main/scripts/smoketest.sh'

  TesteIntegrado-PRE:
    needs: Smoketest-PRE
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/release'
    steps:
      - uses: actions/checkout@v3
      - name: Deploy
        shell: bash
        run:
          sh 'src/main/scripts/testesIntegrados.sh'

  deploy-PRD:
    needs: publish
    runs-on: ubuntu-latest
    environment:
      name: PRD
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy
        shell: bash
        run:
          echo "Deploy PRD"

  Smoketest-PRD:
    needs: deploy-PRD
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Deploy
        shell: bash
        run:
          sh 'src/main/scripts/smoketest.sh'
